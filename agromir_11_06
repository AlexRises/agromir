--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.12
-- Dumped by pg_dump version 9.5.12

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: culture_city(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.culture_city() RETURNS TABLE(culture_name character varying, branch_number integer, city character varying)
    LANGUAGE plpgsql
    AS $$

BEGIN
    RETURN QUERY

   Select Distinct pc.culture_name, pc.branch, b.city
from ((products as pr join product__plant__cultures as ppc on pr.product_id = ppc.product_id)
join plant__cultures as pc on ppc.plant_culture_id = pc.plant_culture_id) 
join branches as b on b.branch_id = pc.branch
Order by pc.branch;

END; $$;


ALTER FUNCTION public.culture_city() OWNER TO postgres;

--
-- Name: invoice_advanced(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.invoice_advanced() RETURNS TABLE(invoice_id integer, part character varying, date_of_delivery character varying, price numeric, amount integer, unit character varying, sum numeric, provider character varying)
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN QUERY
Select i.invoice_id, p.name,  i.date_of_delivery,  p.price, ip.amount, ip.unit, SUM(ip.amount * p.price), b.city 
from (((invoice__products as ip join invoices as i on ip.invoice = i.invoice_id) join products as p on ip.product = p.product_id) join branches as b on ip.branch = b.branch_id)
group by i.invoice_id, p.name, p.price, ip.amount, ip.unit, b.city
order by i.invoice_id;
END; $$;


ALTER FUNCTION public.invoice_advanced() OWNER TO postgres;

--
-- Name: invoice_products_price(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.invoice_products_price() RETURNS TABLE(product_id integer, product_name character varying, price numeric)
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN QUERY
 select p.product_id, p.name, p.price
from products as p 
where p.type = 'Technical Parts' and p.status = 'Not Available'
order by p.product_id;
END; $$;


ALTER FUNCTION public.invoice_products_price() OWNER TO postgres;

--
-- Name: invoice_provider(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.invoice_provider() RETURNS TABLE(invoice_id integer, date_of_delivery character varying, provider character varying)
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN QUERY
select i.invoice_id, i.date_of_delivery, p.company
from invoices as i join providers as p on i.provider = p.provider_id
order by i.invoice_id;
END; $$;


ALTER FUNCTION public.invoice_provider() OWNER TO postgres;

--
-- Name: necessary_parts(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.necessary_parts() RETURNS TABLE(technic_name character varying, parts character varying)
    LANGUAGE plpgsql
    AS $$

BEGIN
    RETURN QUERY
 select tt.name, tt.necessary_parts
from technic__types as tt join technics as t on tt.technic_type_id = t.type_id
where t.condition = 'Need Repair';
  
END; $$;


ALTER FUNCTION public.necessary_parts() OWNER TO postgres;

--
-- Name: predict_land(character varying, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.predict_land(culture_name character varying, amount_of_planted_lands integer) RETURNS TABLE(culture character varying, amount_of_planted numeric, amount_of_necessary_products integer)
    LANGUAGE plpgsql
    AS $_$
DECLARE 
am_of_zem Numeric[];
am_of_prdt Varchar[];
prod_koef Numeric[];
koef Numeric;
BEGIN

prod_koef = array(SElECT((SUM(inv.amount)::numeric)/(pc.amount_of_planted_lands_in_ha)::numeric) as division
FROM (((plant__cultures as pc JOIN product__plant__cultures as prplc
ON pc.plant_culture_id = prplc.plant_culture_id) JOIN products as pr
ON prplc.product_id = pr.product_id)join invoice__products as inv
ON pr.product_id = inv.product)
GROUP by prplc.plant_culture_id, pc.amount_of_planted_lands_in_ha
ORDER BY prplc.plant_culture_id);

am_of_prdt = array(SElECT pc.culture_name
FROM (((plant__cultures as pc JOIN product__plant__cultures as prplc
ON pc.plant_culture_id = prplc.plant_culture_id) JOIN products as pr
ON prplc.product_id = pr.product_id)join invoice__products as inv
ON pr.product_id = inv.product)
GROUP by pc.culture_name, pc.amount_of_planted_lands_in_ha
ORDER BY pc.culture_name);

For i in 1..array_length(prod_koef, 1) LOOP
	if(culture_name = am_of_prdt[i]) THEN koef = prod_koef[i]; END IF;
	
	
END LOOP;
amount_of_necessary_products = $2 * koef;
amount_of_planted = $2;
culture = $1;
RETURN NEXT;
end
$_$;


ALTER FUNCTION public.predict_land(culture_name character varying, amount_of_planted_lands integer) OWNER TO postgres;

--
-- Name: products_outcome(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.products_outcome() RETURNS TABLE(type character varying, outcome numeric, branch integer, city character varying)
    LANGUAGE plpgsql
    AS $$

BEGIN
    RETURN QUERY

   SELECT P.type, SUM(IP.amount * p.price) as Outcome, ip.branch, b.city
FROM (invoice__products As ip JOIN products AS P On ip.product = p.product_id) Inner Join 
branches as b on ip.branch = b.branch_id
Group by ip.branch, p.type, b.city
Order by outcome desc;

END; $$;


ALTER FUNCTION public.products_outcome() OWNER TO postgres;

--
-- Name: products_plant_culture(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.products_plant_culture() RETURNS TABLE(product_name character varying, product_type character varying, culture_name character varying, culture_id integer, branch_number integer, city character varying)
    LANGUAGE plpgsql
    AS $$

BEGIN
    RETURN QUERY

   Select pr.name, pr.type, pc.culture_name, pc.plant_culture_id,  pc.branch, b.city
from ((products as pr join product__plant__cultures as ppc on pr.product_id = ppc.product_id)
join plant__cultures as pc on ppc.plant_culture_id = pc.plant_culture_id) 
join branches as b on b.branch_id = pc.branch
Order by pc.branch;

END; $$;


ALTER FUNCTION public.products_plant_culture() OWNER TO postgres;

--
-- Name: providers(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.providers() RETURNS TABLE(company character varying, id integer)
    LANGUAGE plpgsql
    AS $$

BEGIN
    RETURN QUERY
 select Distinct p.company, i.provider 
 from invoices as i join providers as p on i.provider = p.provider_id
 where i.provider < 7 AND i.provider > 2
 order by i.provider;
  
END; $$;


ALTER FUNCTION public.providers() OWNER TO postgres;

--
-- Name: rank_outcome(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.rank_outcome() RETURNS TABLE(culture_id integer, culture_name character varying, filled_squares integer, rank_for_filled_squares bigint, avg_outcome_for_year numeric, rank_avg_outcome_for_year bigint, avg_income numeric, rank_avg_income bigint)
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN QUERY
    
WITH
filled_squares AS(SELECT (plant_culture_id) as pci, (amount_of_planted_lands_in_ha) as ampl 
FROM plant__cultures
Order by amount_of_planted_lands_in_ha DESC),

rank_filled_squares AS(Select fq.pci,fq.ampl, DENSE_RANK()OVER(ORDER BY fq.ampl DESC)
AS rank_fileed_squares
FROM filled_squares AS fq),


avg_outcome AS (SELECT DISTINCT pc.plant_culture_id,
AVG(inp.amount::numeric(8,2) * pr.price::numeric(8,2)) OVER (PARTITION BY pc.plant_culture_id, 
EXTRACT(Year from pc.terms_of_sowing)) avg_for_year
FROM(((products as pr JOIN invoice__products as inp 
ON pr.product_id = inp.product) JOIN invoices as inv
ON inp.invoice = inv.invoice_id) JOIN product__plant__cultures as pcp
ON pr.product_id = pcp.product_id) RIGHT JOIN plant__cultures as pc
ON pcp.plant_culture_id = pc.plant_culture_id),

rank_avg_outcome AS( SELECT (pr.plant_culture_id) as pci, pr.avg_for_year, DENSE_RANK() OVER(ORDER BY pr.avg_for_year DESC)
AS rank_avg_outcome
FROM avg_outcome as pr),

avg_income AS(Select pr.plant_culture_id, pr.productivity_of_land_in_tons,
AVG(pro.price * pr.productivity_of_land_in_tons) OVER (PARTITION BY pr.plant_culture_id, 
EXTRACT(Year from pr.terms_of_cleaning)) avg_income
from ((plant__cultures as pr JOIN product__plant__cultures as pcp
ON pr.plant_culture_id = pcp.plant_culture_id) JOIN products as pro
ON pcp.product_id = pro.product_id) LEFT JOIN invoice__products as inp
ON pro.product_id = inp.product
WHERE pro.type = 'Seeds'
GROUP by pr.plant_culture_id, pro.price
Order by pr.plant_culture_id),

rank_avg_income AS(SELECT (pr.plant_culture_id) as pci, pr.avg_income, DENSE_RANK() OVER(ORDER BY pr.avg_income DESC)
AS rank_avg_income
FROM avg_income as pr)

SELECT pc.plant_culture_id, pc.culture_name, rfs.ampl, rfs.rank_fileed_squares, rao.avg_for_year, rao.rank_avg_outcome, rai.avg_income, rai.rank_avg_income
FROM  rank_filled_squares as rfs, plant__cultures as pc, 
rank_avg_outcome as rao, rank_avg_income as rai
WHERE pc.plant_culture_id = rfs.pci AND rfs.pci = pc.plant_culture_id AND pc.plant_culture_id = rao.pci 
AND pc.plant_culture_id = rai.pci
ORDER BY pc.plant_culture_id;

END; $$;


ALTER FUNCTION public.rank_outcome() OWNER TO postgres;

--
-- Name: staff_state(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.staff_state() RETURNS TABLE(name_ character varying, surname_ character varying, pos character varying, payment_ numeric, city character varying)
    LANGUAGE plpgsql
    AS $$

begin
return query

Select name, surname, position, payment, b.city
From staff join branches as b on staff.branch = b.branch_id
Order by payment desc;
end; $$;


ALTER FUNCTION public.staff_state() OWNER TO postgres;

--
-- Name: technic_state(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.technic_state() RETURNS TABLE(id integer, name character varying, branch integer, city character varying, necessary_parts character varying, condition character varying, type character varying)
    LANGUAGE plpgsql
    AS $$

begin
return query

Select t.technic_id, tt.name, t.branch, b.city, tt.necessary_parts, t.condition, tt.technic_type
From (technic__types as tt INNER JOIN technics as t on tt.technic_type_id = t.type_id) join branches as b on t.branch = b.branch_id;
end; $$;


ALTER FUNCTION public.technic_state() OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: branches; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.branches (
    branch_id integer NOT NULL,
    director integer NOT NULL,
    city character varying(255) NOT NULL,
    address character varying(255) NOT NULL
);


ALTER TABLE public.branches OWNER TO postgres;

--
-- Name: branch_branch_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.branch_branch_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.branch_branch_id_seq OWNER TO postgres;

--
-- Name: branch_branch_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.branch_branch_id_seq OWNED BY public.branches.branch_id;


--
-- Name: invoice__products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.invoice__products (
    invoice_products_id integer NOT NULL,
    product integer NOT NULL,
    amount integer NOT NULL,
    invoice integer NOT NULL,
    unit character varying(255) NOT NULL,
    branch integer
);


ALTER TABLE public.invoice__products OWNER TO postgres;

--
-- Name: invoices; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.invoices (
    invoice_id integer NOT NULL,
    date_of_delivery character varying,
    provider integer NOT NULL
);


ALTER TABLE public.invoices OWNER TO postgres;

--
-- Name: invoice_invoice_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.invoice_invoice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.invoice_invoice_id_seq OWNER TO postgres;

--
-- Name: invoice_invoice_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.invoice_invoice_id_seq OWNED BY public.invoices.invoice_id;


--
-- Name: invoice_products_invoice_products_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.invoice_products_invoice_products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.invoice_products_invoice_products_id_seq OWNER TO postgres;

--
-- Name: invoice_products_invoice_products_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.invoice_products_invoice_products_id_seq OWNED BY public.invoice__products.invoice_products_id;


--
-- Name: migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.migrations (
    id integer NOT NULL,
    migration character varying(255) NOT NULL,
    batch integer NOT NULL
);


ALTER TABLE public.migrations OWNER TO postgres;

--
-- Name: migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.migrations_id_seq OWNER TO postgres;

--
-- Name: migrations_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.migrations_id_seq OWNED BY public.migrations.id;


--
-- Name: plant__cultures; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plant__cultures (
    plant_culture_id integer NOT NULL,
    branch integer NOT NULL,
    productivity_of_land_in_tons integer NOT NULL,
    terms_of_sowing date NOT NULL,
    terms_of_cleaning date NOT NULL,
    amount_of_planted_lands_in_ha integer NOT NULL,
    culture_name character varying(255) NOT NULL
);


ALTER TABLE public.plant__cultures OWNER TO postgres;

--
-- Name: plant_culture_plant_culture_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.plant_culture_plant_culture_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.plant_culture_plant_culture_id_seq OWNER TO postgres;

--
-- Name: plant_culture_plant_culture_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.plant_culture_plant_culture_id_seq OWNED BY public.plant__cultures.plant_culture_id;


--
-- Name: product__plant__cultures; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.product__plant__cultures (
    product_id integer NOT NULL,
    plant_culture_id integer NOT NULL
);


ALTER TABLE public.product__plant__cultures OWNER TO postgres;

--
-- Name: products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products (
    product_id integer NOT NULL,
    name character varying(255),
    status character varying(255),
    type character varying(255),
    price numeric(8,2)
);


ALTER TABLE public.products OWNER TO postgres;

--
-- Name: product_product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.product_product_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.product_product_id_seq OWNER TO postgres;

--
-- Name: product_product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.product_product_id_seq OWNED BY public.products.product_id;


--
-- Name: providers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.providers (
    provider_id integer NOT NULL,
    company character varying(255),
    adress character varying(255),
    email character varying(255),
    location character varying(255),
    telephone character varying(255)
);


ALTER TABLE public.providers OWNER TO postgres;

--
-- Name: provider_provider_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.provider_provider_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.provider_provider_id_seq OWNER TO postgres;

--
-- Name: provider_provider_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.provider_provider_id_seq OWNED BY public.providers.provider_id;


--
-- Name: staff; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.staff (
    staff_id integer NOT NULL,
    name character varying(255),
    patronym character varying(255),
    surname character varying(255),
    phone character varying(255),
    "position" character varying(255),
    payment numeric(8,2),
    branch integer,
    address character varying(255)
);


ALTER TABLE public.staff OWNER TO postgres;

--
-- Name: staff_staff_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.staff_staff_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.staff_staff_id_seq OWNER TO postgres;

--
-- Name: staff_staff_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.staff_staff_id_seq OWNED BY public.staff.staff_id;


--
-- Name: technic__types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.technic__types (
    technic_type_id integer NOT NULL,
    name character varying(255),
    necessary_parts character varying(255),
    fuel_type character varying(255),
    technic_type character varying(255)
);


ALTER TABLE public.technic__types OWNER TO postgres;

--
-- Name: technics; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.technics (
    technic_id integer NOT NULL,
    type_id integer NOT NULL,
    condition character varying(255),
    date_of_delivery date,
    provider integer NOT NULL,
    branch integer
);


ALTER TABLE public.technics OWNER TO postgres;

--
-- Name: technic_technic_id_seq1; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.technic_technic_id_seq1
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.technic_technic_id_seq1 OWNER TO postgres;

--
-- Name: technic_technic_id_seq1; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.technic_technic_id_seq1 OWNED BY public.technics.technic_id;


--
-- Name: technic_type_technic_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.technic_type_technic_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.technic_type_technic_type_id_seq OWNER TO postgres;

--
-- Name: technic_type_technic_type_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.technic_type_technic_type_id_seq OWNED BY public.technic__types.technic_type_id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    email character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    remember_token character varying(100),
    created_at timestamp(0) without time zone,
    updated_at timestamp(0) without time zone
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.users_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO postgres;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: branch_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.branches ALTER COLUMN branch_id SET DEFAULT nextval('public.branch_branch_id_seq'::regclass);


--
-- Name: invoice_products_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice__products ALTER COLUMN invoice_products_id SET DEFAULT nextval('public.invoice_products_invoice_products_id_seq'::regclass);


--
-- Name: invoice_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoices ALTER COLUMN invoice_id SET DEFAULT nextval('public.invoice_invoice_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.migrations ALTER COLUMN id SET DEFAULT nextval('public.migrations_id_seq'::regclass);


--
-- Name: plant_culture_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plant__cultures ALTER COLUMN plant_culture_id SET DEFAULT nextval('public.plant_culture_plant_culture_id_seq'::regclass);


--
-- Name: product_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products ALTER COLUMN product_id SET DEFAULT nextval('public.product_product_id_seq'::regclass);


--
-- Name: provider_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.providers ALTER COLUMN provider_id SET DEFAULT nextval('public.provider_provider_id_seq'::regclass);


--
-- Name: staff_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.staff ALTER COLUMN staff_id SET DEFAULT nextval('public.staff_staff_id_seq'::regclass);


--
-- Name: technic_type_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.technic__types ALTER COLUMN technic_type_id SET DEFAULT nextval('public.technic_type_technic_type_id_seq'::regclass);


--
-- Name: technic_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.technics ALTER COLUMN technic_id SET DEFAULT nextval('public.technic_technic_id_seq1'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Name: branch_branch_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.branch_branch_id_seq', 3, true);


--
-- Data for Name: branches; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.branches (branch_id, director, city, address) FROM stdin;
1	1	Vinnytsa	21034,Keletska,45
2	18	Kherson	73103,Tyraspolska,14
3	37	Odessa	(65112,Kanatnaya,78)
\.


--
-- Data for Name: invoice__products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.invoice__products (invoice_products_id, product, amount, invoice, unit, branch) FROM stdin;
15	26	2	3	units	1
21	21	1	1	Units	1
22	25	3	9	Units	2
23	26	4	16	Units	1
24	24	3	16	Units	1
25	24	3	16	Units	2
26	21	1	3	Units	1
27	25	2	15	units	3
1	2	400	1	tones	1
2	3	600	1	tones	1
3	5	300	2	tones	2
4	8	200	2	tones	3
5	10	400	13	tones	1
6	13	100	3	tones	2
7	14	50	5	tones	2
8	17	100	2	tones	3
10	20	30	12	litres	2
11	21	2	3	units	1
12	21	2	9	units	3
13	25	1	8	units	3
9	18	50	1	tones	3
14	25	1	3	units	1
\.


--
-- Name: invoice_invoice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.invoice_invoice_id_seq', 17, true);


--
-- Name: invoice_products_invoice_products_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.invoice_products_invoice_products_id_seq', 27, true);


--
-- Data for Name: invoices; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.invoices (invoice_id, date_of_delivery, provider) FROM stdin;
1	2018-04-13	1
2	2018-03-21	2
3	2018-05-01	3
4	2018-06-18	10
5	2018-05-22	12
6	2018-04-13	11
7	2018-03-02	4
8	2018-02-27	5
9	2018-04-19	6
10	2018-03-03	11
11	2018-01-28	7
12	2018-02-06	8
13	2018-03-24	9
14	2018-05-23	4
15	2018-10-13	4
16	2018-11-19	6
17	2018-10-16	4
\.


--
-- Data for Name: migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.migrations (id, migration, batch) FROM stdin;
1	2014_10_12_test0_create_users_table	1
2	2014_10_12_test1_create_password_resets_table	1
12	2018_05_04_200000_create_branch_table	2
13	2018_05_04_300000_create_staff_table	2
14	2018_05_09_400000_create_technic_type_table	2
15	2018_05_09_500000_create_product_table	2
16	2018_05_09_600000_create_provider_table	2
17	2018_05_09_700000_create_technic_table	2
18	2018_05_09_800000_create_plant_culture_table	2
19	2018_05_15_110000_create_invoice_table	2
20	2018_05_15_120000_create_invoice_products_table	2
21	2018_05_28_155829_create_test_table	2
\.


--
-- Name: migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.migrations_id_seq', 21, true);


--
-- Data for Name: plant__cultures; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.plant__cultures (plant_culture_id, branch, productivity_of_land_in_tons, terms_of_sowing, terms_of_cleaning, amount_of_planted_lands_in_ha, culture_name) FROM stdin;
1	1	2000	2016-10-02	2017-08-03	1500	Wheat Vinnytsa
2	1	4000	2016-04-29	2017-09-09	1000	Wheat 2 Vinnytsa
3	1	2500	2016-08-30	2017-10-19	1400	Barley Vinnytsa
4	1	2000	2016-10-10	2017-07-29	2000	Rapeseed Vinnytsa
5	1	3500	2016-04-21	2017-09-16	950	Corn Vinnytsa
6	2	2500	2016-04-18	2017-09-18	1600	Not Cleaned Wheat Kherson
7	2	860	2016-05-26	2017-08-19	800	Barley Kherson
8	2	2000	2016-10-09	2017-08-14	1550	Cleaned Sunflower Kherson
9	2	3500	2016-09-15	2017-06-30	2000	Not Cleaned Buckwheat Kherson
10	3	1950	2016-03-26	2017-07-02	1800	Not Cleaned Wheat Odessa
11	2	860	2016-05-18	2017-08-27	2300	Not Cleaned Rapeseed Kherson
12	3	1000	2016-10-12	2017-08-13	1600	Cleaned Peas Odessa
13	3	2000	2016-04-19	2017-09-19	1300	Not Cleaned Buckwheat Odessa
14	3	3500	2016-08-20	2017-10-29	1500	Wheat Odessa
15	2	4000	2016-10-14	2017-07-23	2300	Not Cleaned Wheat 2 Kherson
16	3	5500	2016-04-25	2017-09-17	1950	Barley Odessa
17	3	6500	2016-04-23	2017-09-14	1700	Cleaned Sunflower Odessa
18	1	7600	2016-05-24	2017-08-15	1800	Not Cleaned Rapeseed 2 Odessa
19	3	8000	2016-10-06	2017-08-13	1950	Cleaned Peas 2 Odessa
20	3	9500	2016-09-01	2017-06-26	2100	Not Cleaned Rapeseed 2 Odessa
\.


--
-- Name: plant_culture_plant_culture_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.plant_culture_plant_culture_id_seq', 20, true);


--
-- Data for Name: product__plant__cultures; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.product__plant__cultures (product_id, plant_culture_id) FROM stdin;
1	14
2	15
3	16
4	17
5	18
1	1
1	2
3	3
5	4
9	5
2	6
3	7
4	8
8	9
2	10
6	11
7	12
8	13
6	20
7	19
10	1
12	1
11	2
12	3
15	3
11	4
10	4
16	4
17	4
10	5
13	5
12	5
16	5
17	6
10	6
12	6
14	6
15	6
10	7
11	7
14	7
16	7
12	7
11	8
13	8
15	8
17	8
10	9
12	9
14	9
15	9
16	9
12	10
11	10
15	10
17	10
11	11
12	11
14	11
16	11
10	12
11	12
14	12
16	12
17	12
10	13
13	13
15	13
17	13
10	14
12	14
16	14
17	14
12	15
11	15
10	15
14	15
16	15
17	15
10	18
14	18
16	18
10	19
11	19
17	19
16	19
18	19
11	20
12	20
10	20
16	20
17	20
14	20
17	2
14	2
10	17
12	17
14	17
18	17
\.


--
-- Name: product_product_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.product_product_id_seq', 28, true);


--
-- Data for Name: products; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.products (product_id, name, status, type, price) FROM stdin;
21	Bearings John Deere	Not Available	Technical Parts	350.00
22	Hoses	Available	Technical Parts	400.00
23	Shaft on header	Available	Technical Parts	310.00
24	Nozzle TechnoTorg	Not Available	Technical Parts	150.00
25	Hydraulic pump Amako	Not Available	Technical Parts	300.00
26	Generator Agco	Not Available	Technical Parts	450.00
27	Forklift	Available	Technical Parts	310.00
28	Forks Hoses	Available	Technical Parts	280.00
1	Wheat	Available	Seeds	100.00
2	Not Cleaned Wheat	Not Available	Seeds	200.00
3	Barley	Not Available	Seeds	300.00
4	Cleaned Sunflower	Available	Seeds	100.00
5	Rapeseed	Not Available	Seeds	200.00
6	Not Cleaned Rapeseed	Available	Seeds	300.00
7	Cleaned Peas	Available	Seeds	400.00
8	Not Cleaned Buckwheat	Not Available	Seeds	100.00
9	Corn	Available	Seeds	150.00
10	NPC	Not Available	Fertilizers	230.00
11	Ammonia Selitra	Available	Fertilizers	170.00
12	Ammonium Sulphate	Available	Fertilizers	320.00
13	Carbamide	Not Available	Fertilizers	240.00
14	GrandStar	Not Available	Plant Protectors	430.00
15	Connect (Insecticide)	Available	Plant Protectors	150.00
16	Horus	Available	Plant Protectors	240.00
17	Actellik	Not Available	Plant Protectors	250.00
18	Calypso	Not Available	Plant Protectors	210.00
19	Diesel	Available	Fuel	310.00
20	Petrol(92)	Not Available	Fuel	180.00
\.


--
-- Name: provider_provider_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.provider_provider_id_seq', 12, true);


--
-- Data for Name: providers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.providers (provider_id, company, adress, email, location, telephone) FROM stdin;
1	Eridon	(03124,Chornovola,30)	office@eridon.ua	Kyiv	0(44)5018830
2	Agrozahyst	(03185,Mashynobudivnykiv,4В)	azdonbas@gmail.com	Kyiv	0(44)2053545
3	John Deere	(08130,Soborna,1Б)	Ukraine2@JohnDeere.com	Kyiv	0(44)4065810
4	Agco	(123022,Rochdelskaya,15)	info.rus@agco-rm.ru	Moskva	+74957300805
5	Amako	(02089,Brovarska,2)	ukraine@amacoint.com	Kyiv	0504484334
6	TechnoTorg	(65085,"Tyraspolske shosse",24)	odessa@technotorg.com	Odesa	0487053129
7	OKKO	(04070,Naberezhno-Khreshchatitskaya,15)	office@gng.com.ua	Kyiv	0(44)3905770
8	SOCAR Energy Ukraine	(01030,B.Khmelnytskogo,52)	info@socar.ua	Kyiv	0(44)2071010
9	KhimAgro	(65481,"Grigorevskogo desanta",34/4)	khimagro@office.ua	Yuzhniy	0(48)7374441
10	OPZ	(65464,Zavodska,3)	office@opz.odessa.ua	Yuzhniy	0(48)7586009
11	CherkasAzot	(18011,Pershomayska,72)	sale@azot.ck.ua	Cherkasy	0472393889
12	EvroChim	(01133,Shchorsa,44)	sale@evrochim.com	Kyiv	0(44)4905652
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.staff (staff_id, name, patronym, surname, phone, "position", payment, branch, address) FROM stdin;
1	Kirill	Denysovich	Dorenko	0634874198	Chief Agronomist	18000.00	1	(21032,Vinnytsa,Pervomayska,14,58)
2	Ivan	Glebovich	Skorikov	0678214321	Agronomist Chemist	12000.00	1	(21413,Vinnysta,Lermontovskyi,78,12)
3	Erick	Genadievich	Zahoriy	0934527801	Agronomist Chemist	12000.00	1	(21874,Vinnysta,Gaydara,96,44)
4	Sergey	Ivanovich	Odariy	0673017863	Agronomist Chemist	12000.00	1	(21196,Vinnysta,Gercena,47,56)
5	Denis	Sergeevich	Dorakov	0965972340	Chief Engineer	17000.00	1	(21532,Vinnysta,"Vasilya Stusa",4,)
6	Marina	Aleksandrovna	Stokich	0972436981	Chief Accountant	15000.00	1	(21632,Vinnysta,Plekhanova,23,12)
7	Irina	Sergeevna	Chervonaya	0637824363	Accountant	8000.00	1	(21910,Vinnysta,Korolyova,52,63)
8	Natalia	Aleksandrovna	Ivanova	0674321562	Accountant	8000.00	1	(21234,Vinnysta,Volodarskogo,71,114)
9	Anastasiia	Fedorovna	Shapovalenko	0551473020	Accountant	8000.00	1	(21632,Vinnysta,Nevskogo,84,64)
10	Oleg	Stanislavovich	Senko	0674106792	Engineers Machinery	7000.00	1	(21301,Vinnysta,Gogolya,95,10)
11	Dimitriy	Vadimovich	Valenkov	0956321475	Engineers Machinery	7000.00	1	(21650,Vinnysta,"Sergiya Lazo",120,75)
12	Stanislav	Borisovich	Eremenko	0689724930	Engineers Machinery	7000.00	1	(21380,Vinnysta,Pestelya,87,32)
13	Sergey	Alekseevich	Ostapenko	0674865785	Engineers Machinery	7000.00	1	(21311,Vinnysta,Kahovskogo,42,53)
14	Evgeniy	Vladimirovich	Shurenko	0636987520	Engineers Machinery	7000.00	1	(21454,Vinnysta,Ryleva,71,125)
15	Oleg	Rezovich	Kaladze	0684302541	Combine harvesters	6000.00	1	(21626,Vinnysta,Goncharova,28,57)
16	Igor	Valeervich	Bandurko	0978023149	Combine harvesters	6000.00	1	(21789,Vinnysta,Frunze,83,72)
17	Ivan	Valeervich	Nesvanov	0978023149	Combine harvesters	6000.00	1	(21521,Vinnysta,Stecenko,37,2)
18	Ivan	Evgenievich	Kovalev	0665871021	Director	25000.00	2	(73021,Kherson,"Ivana Boguna",85,)
19	Vladislav	Vladimirovich	Tarasov	0658741245	Chief Agronomist	18000.00	2	(73032,Kherson,Tsurupy,96,21)
20	Victor	Ivanovich	Lapin	0967214964	Agronomist Chemist	12000.00	2	(73413,Kherson,Perekopskaya,82,34)
21	Nikolayi	Glebovich	Gerasimov	0678954725	Agronomist Chemist	12000.00	2	(73874,Kherson,Fabrichna,44,96)
22	Yuriy	Nikolaevich	Khimich	0674026975	Agronomist Chemist	12000.00	2	(73196,Kherson,Chornomorska,47,56)
23	Denis	Sergeevich	Ivanchenko	0965942820	Chief Engineer	17000.00	2	(73532,Kherson,Kharchenko,14,)
24	Alisa	Igorevna	Mamashova	0935714302	Chief Accountant	15000.00	2	(73632,Kherson,Topoleva,28,63)
25	Svetlana	Vladimirovna	Petrova	0669021754	Accountant	8000.00	2	(73910,Kherson,Parovosna,63,52)
26	Natalia	Borisovna	Shelest	0674016352	Accountant	8000.00	2	(73234,Kherson,Neftyanikova,114,72)
27	Valeria	Alekseevna	Leontieva	0635874858	Accountant	8000.00	2	(73632,Kherson,Ushakova,64,84)
28	Leonid	Fedorovich	Fursenko	0674109742	Engineers Machinery	7000.00	2	(73301,Kherson,Perekopskaya,20,10)
29	Dimitriy	Gennadievich	Sukhov	0956754744	Engineers Machinery	7000.00	2	(73650,Kherson,Fabricha,35,14)
30	Daniil	Sergeevich	Orlov	0689214778	Engineers Machinery	7000.00	2	(73180,Kherson,Mykolayivska,32,94)
31	Sergey	Dmitrievich	Zacharchenko	0674521796	Engineers Machinery	7000.00	2	(73311,Kherson,Poltavska,53,)
32	Pavel	Konstantinovich	Voloshyn	0639857312	Engineers Machinery	7000.00	2	(73454,Kherson,Robocha,10,4)
33	Konstantin	Artemovich	Makushev	09574146204	Combine harvesters	6000.00	2	(73626,Kherson,Raketna,52,10)
34	Fedor	Valeervich	Luchko	0652216998	Combine harvesters	6000.00	2	(73789,Kherson,Tyraspolska,3,41)
35	Eldar	Vasilievich	Ryazancev	0968524745	Combine harvesters	6000.00	2	(73521,Kherson,Universytetska,37,2)
36	Ivan	Valeervich	Korobin	0978023245	Combine harvesters	6000.00	2	(73521,Kherson,Fonvisina,82,36)
37	Alexandr	Georgievich	Feodoridi	0674372778	Director	25000.00	3	(65006,Odessa,Griboedova,5,)
38	Igor	Nikolaevich	Davydov	0967412458	Chief Agronomist	18000.00	3	(65032,Odessa,Vanceti,15,)
39	Artem	Vladimirovich	Voloshynov	0631478956	Agronomist Chemist	12000.00	3	(65118,Odessa,Kosmonavtiv,62,19)
40	Sergey	Ivanovich	Lazarev	0963214758	Agronomist Chemist	12000.00	3	(65189,Odessa,Krasnova,32,52)
41	Dimitriy	Sergeevich	Rozanov	0964527896	Agronomist Chemist	12000.00	3	(65785,Odessa,Nedelna,14,)
42	Denis	Alekseevich	Shamatazhy	0633578965	Chief Engineer	17000.00	3	(65532,Odessa,Gellera,65,87)
43	Anastasiia	Igorevna	Mihaltsova	0936514778	Chief Accountant	15000.00	3	(65418,Odessa,"Lustdorfskaya doroga",92,14)
44	Ekatirina	Sergeevna	Gavrilina	0679254136	Accountant	8000.00	3	(65632,Odessa,Koroleva,35,96)
45	Marina	Evgeneevna	Sidorenko	0669123978	Accountant	8000.00	3	(65067,Odessa,"Ivana Franka",30,58)
46	Alina	Markovna	Osadchaya	0978206974	Accountant	8000.00	3	(65389,Odessa,Shklyaruka,10,41)
47	Aleksey	Vladimirovich	Rak	0669234877	Engineers Machinery	7000.00	3	(65201,Odessa,Varnenskaya,75,39)
48	Vladimir	Timofeevich	Terekhov	0961596026	Engineers Machinery	7000.00	3	(65831,Odessa,"Marshala Govorova",60,80)
49	Ivan	Aleksandrovich	Mashey	0996412569	Engineers Machinery	7000.00	3	(65745,Odessa,Tolbukhina,53,29)
50	Vadim	Stepanovich	Shevchenko	0667125463	Engineers Machinery	7000.00	3	(65968,Odessa,Brigadna,6,)
51	Stanislav	Valerevich	Fomenko	0955214859	Combine harvesters	6000.00	3	(65014,Odessa,"Yukhima Gellera",82,43)
52	Aleksandr	Petrovich	Kupchak	0967415894	Combine harvesters	6000.00	3	(65325,Odessa,Dovzhenka,3,15)
53	Andrey	Mihaylovich	Nabatov	0954982145	Combine harvesters	6000.00	3	(65854,Odessa,Malovskogo,47,)
\.


--
-- Name: staff_staff_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.staff_staff_id_seq', 53, true);


--
-- Data for Name: technic__types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.technic__types (technic_type_id, name, necessary_parts, fuel_type, technic_type) FROM stdin;
1	JOHN DEERE 8200	Bearings	Diesel	Tractor
2	JOHN DEERE 6930 PREMIUM	Generator	Diesel	Tractor
3	JOHN DEERE 8320 R	Generator	Diesel	Tractor
4	Challenger MT600E	Hoses	Diesel	Tractor
5	MASSEY FERGUSON MF 6713	-	Diesel	Tractor
6	MTZ 82.1	Bearings	Diesel	Tractor
7	TD 5.80 New Holland	-	Diesel	Tractor
8	R4030	-	Diesel	Sprinkler
9	R4045	Nozzle	Diesel	Sprinkler
10	APACHE AS 700	Hydraulic pump	Diesel	Sprinkler
11	ATLANTIQUE 3200	-	Diesel	Sprinkler
12	W550	Bearings	Diesel	Combine harvester
13	W550	-	Diesel	Combine harvester
14	W660	Shaft on header	Diesel	Combine harvester
15	5255 L PL	-	Diesel	Combine harvester
16	MASSEY FERGUSON 7246 ACTIVA	Shaft on header	Diesel	Combine harvester
17	John Deere 410E 	Hydraulic pump	Diesel	Tipper
18	KAMAZ 45143 	-	Diesel	Tipper
19	MAZ 6501A8-325-000	Bearings	Diesel	Tipper
20	TX140-45	Forklift	Diesel	Loader
21	TR270	-	Diesel	Loader
22	Vaz 2121	Nozzle	Petrol(92)	Work Car
23	Toyota Land Cruiser Prado 120	-	Petrol(92)	Work Car
\.


--
-- Name: technic_technic_id_seq1; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.technic_technic_id_seq1', 22, true);


--
-- Name: technic_type_technic_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.technic_type_technic_type_id_seq', 23, true);


--
-- Data for Name: technics; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.technics (technic_id, type_id, condition, date_of_delivery, provider, branch) FROM stdin;
1	2	Need Repair	2015-05-23	3	1
2	3	Need Repair	2017-09-14	3	2
3	4	Need Repair	2016-09-26	4	1
4	5	Ready For Work	2016-05-26	5	3
5	6	Need Repair	2016-03-12	6	1
6	7	Ready For Work	2017-03-26	6	2
7	8	Ready For Work	2017-06-09	3	1
8	9	Need Repair	2015-06-16	3	3
9	10	Need Repair	2016-05-29	5	2
10	11	Ready For Work	2017-05-10	6	3
11	12	Need Repair	2016-06-26	3	2
12	13	Ready For Work	2016-06-26	3	3
13	14	Need Repair	2016-06-26	3	2
14	15	Ready For Work	2017-04-17	4	1
15	16	Need Repair	2016-05-15	5	1
16	17	Need Repair	2015-07-08	3	1
17	18	Ready For Work	2016-10-21	6	2
18	19	Need Repair	2016-10-28	6	1
19	20	Need Repair	2015-05-25	5	3
20	21	Ready For Work	2017-04-10	5	1
21	22	Need Repair	2008-11-15	13	2
22	23	Ready For Work	2006-06-05	14	2
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (id, name, email, password, remember_token, created_at, updated_at) FROM stdin;
\.


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.users_id_seq', 1, false);


--
-- Name: branch_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.branches
    ADD CONSTRAINT branch_pkey PRIMARY KEY (branch_id);


--
-- Name: invoice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoices
    ADD CONSTRAINT invoice_pkey PRIMARY KEY (invoice_id);


--
-- Name: invoice_products_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice__products
    ADD CONSTRAINT invoice_products_pkey PRIMARY KEY (invoice_products_id);


--
-- Name: migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.migrations
    ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);


--
-- Name: plant_culture_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plant__cultures
    ADD CONSTRAINT plant_culture_pkey PRIMARY KEY (plant_culture_id);


--
-- Name: product_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT product_pkey PRIMARY KEY (product_id);


--
-- Name: product_plant_culture_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product__plant__cultures
    ADD CONSTRAINT product_plant_culture_pkey PRIMARY KEY (product_id, plant_culture_id);


--
-- Name: provider_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.providers
    ADD CONSTRAINT provider_pkey PRIMARY KEY (provider_id);


--
-- Name: staff_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.staff
    ADD CONSTRAINT staff_pkey PRIMARY KEY (staff_id);


--
-- Name: technic_pkey1; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.technics
    ADD CONSTRAINT technic_pkey1 PRIMARY KEY (technic_id);


--
-- Name: technic_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.technic__types
    ADD CONSTRAINT technic_type_pkey PRIMARY KEY (technic_type_id);


--
-- Name: users_email_unique; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_unique UNIQUE (email);


--
-- Name: users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: fk_branch_staff; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.staff
    ADD CONSTRAINT fk_branch_staff FOREIGN KEY (branch) REFERENCES public.branches(branch_id);


--
-- Name: fk_branch_t; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.technics
    ADD CONSTRAINT fk_branch_t FOREIGN KEY (branch) REFERENCES public.branches(branch_id);


--
-- Name: fk_ip_branch_to_branch; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice__products
    ADD CONSTRAINT fk_ip_branch_to_branch FOREIGN KEY (branch) REFERENCES public.branches(branch_id);


--
-- Name: fk_technic_technic_type; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.technics
    ADD CONSTRAINT fk_technic_technic_type FOREIGN KEY (type_id) REFERENCES public.technic__types(technic_type_id);


--
-- Name: invoice_products_invoice_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice__products
    ADD CONSTRAINT invoice_products_invoice_foreign FOREIGN KEY (invoice) REFERENCES public.invoices(invoice_id) ON DELETE CASCADE;


--
-- Name: invoice_products_product_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoice__products
    ADD CONSTRAINT invoice_products_product_foreign FOREIGN KEY (product) REFERENCES public.products(product_id) ON DELETE CASCADE;


--
-- Name: invoice_provider_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invoices
    ADD CONSTRAINT invoice_provider_foreign FOREIGN KEY (provider) REFERENCES public.providers(provider_id) ON DELETE CASCADE;


--
-- Name: plant_culture_branch_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plant__cultures
    ADD CONSTRAINT plant_culture_branch_foreign FOREIGN KEY (branch) REFERENCES public.branches(branch_id) ON DELETE CASCADE;


--
-- Name: product_plant_culture_plant_cultureid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product__plant__cultures
    ADD CONSTRAINT product_plant_culture_plant_cultureid_foreign FOREIGN KEY (plant_culture_id) REFERENCES public.plant__cultures(plant_culture_id) ON DELETE CASCADE;


--
-- Name: product_plant_culture_productid_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.product__plant__cultures
    ADD CONSTRAINT product_plant_culture_productid_foreign FOREIGN KEY (product_id) REFERENCES public.products(product_id) ON DELETE CASCADE;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- Name: TABLE branches; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.branches FROM PUBLIC;
REVOKE ALL ON TABLE public.branches FROM postgres;
GRANT ALL ON TABLE public.branches TO postgres;
GRANT ALL ON TABLE public.branches TO chief_director;
GRANT SELECT ON TABLE public.branches TO vice_director;


--
-- Name: TABLE invoice__products; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.invoice__products FROM PUBLIC;
REVOKE ALL ON TABLE public.invoice__products FROM postgres;
GRANT ALL ON TABLE public.invoice__products TO postgres;
GRANT ALL ON TABLE public.invoice__products TO chief_director;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.invoice__products TO vice_director;


--
-- Name: TABLE invoices; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.invoices FROM PUBLIC;
REVOKE ALL ON TABLE public.invoices FROM postgres;
GRANT ALL ON TABLE public.invoices TO postgres;
GRANT ALL ON TABLE public.invoices TO chief_director;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.invoices TO vice_director;


--
-- Name: TABLE migrations; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.migrations FROM PUBLIC;
REVOKE ALL ON TABLE public.migrations FROM postgres;
GRANT ALL ON TABLE public.migrations TO postgres;
GRANT ALL ON TABLE public.migrations TO chief_director;


--
-- Name: TABLE plant__cultures; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.plant__cultures FROM PUBLIC;
REVOKE ALL ON TABLE public.plant__cultures FROM postgres;
GRANT ALL ON TABLE public.plant__cultures TO postgres;
GRANT ALL ON TABLE public.plant__cultures TO chief_director;
GRANT SELECT ON TABLE public.plant__cultures TO vice_director;


--
-- Name: TABLE product__plant__cultures; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.product__plant__cultures FROM PUBLIC;
REVOKE ALL ON TABLE public.product__plant__cultures FROM postgres;
GRANT ALL ON TABLE public.product__plant__cultures TO postgres;
GRANT ALL ON TABLE public.product__plant__cultures TO chief_director;


--
-- Name: TABLE products; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.products FROM PUBLIC;
REVOKE ALL ON TABLE public.products FROM postgres;
GRANT ALL ON TABLE public.products TO postgres;
GRANT ALL ON TABLE public.products TO chief_director;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.products TO vice_director;


--
-- Name: TABLE providers; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.providers FROM PUBLIC;
REVOKE ALL ON TABLE public.providers FROM postgres;
GRANT ALL ON TABLE public.providers TO postgres;
GRANT ALL ON TABLE public.providers TO chief_director;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.providers TO vice_director;


--
-- Name: TABLE staff; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.staff FROM PUBLIC;
REVOKE ALL ON TABLE public.staff FROM postgres;
GRANT ALL ON TABLE public.staff TO postgres;
GRANT ALL ON TABLE public.staff TO chief_director;


--
-- Name: TABLE technic__types; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.technic__types FROM PUBLIC;
REVOKE ALL ON TABLE public.technic__types FROM postgres;
GRANT ALL ON TABLE public.technic__types TO postgres;
GRANT ALL ON TABLE public.technic__types TO chief_director;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.technic__types TO vice_director;


--
-- Name: TABLE technics; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.technics FROM PUBLIC;
REVOKE ALL ON TABLE public.technics FROM postgres;
GRANT ALL ON TABLE public.technics TO postgres;
GRANT ALL ON TABLE public.technics TO chief_director;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.technics TO vice_director;


--
-- Name: TABLE users; Type: ACL; Schema: public; Owner: postgres
--

REVOKE ALL ON TABLE public.users FROM PUBLIC;
REVOKE ALL ON TABLE public.users FROM postgres;
GRANT ALL ON TABLE public.users TO postgres;
GRANT ALL ON TABLE public.users TO chief_director;


--
-- PostgreSQL database dump complete
--

